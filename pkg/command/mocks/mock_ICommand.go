// Code generated by mockery v2.44.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MockICommand is an autogenerated mock type for the ICommand type
type MockICommand struct {
	mock.Mock
}

type MockICommand_Expecter struct {
	mock *mock.Mock
}

func (_m *MockICommand) EXPECT() *MockICommand_Expecter {
	return &MockICommand_Expecter{mock: &_m.Mock}
}

// AddHandler provides a mock function with given fields:
func (_m *MockICommand) AddHandler() {
	_m.Called()
}

// MockICommand_AddHandler_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AddHandler'
type MockICommand_AddHandler_Call struct {
	*mock.Call
}

// AddHandler is a helper method to define mock.On call
func (_e *MockICommand_Expecter) AddHandler() *MockICommand_AddHandler_Call {
	return &MockICommand_AddHandler_Call{Call: _e.mock.On("AddHandler")}
}

func (_c *MockICommand_AddHandler_Call) Run(run func()) *MockICommand_AddHandler_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockICommand_AddHandler_Call) Return() *MockICommand_AddHandler_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockICommand_AddHandler_Call) RunAndReturn(run func()) *MockICommand_AddHandler_Call {
	_c.Call.Return(run)
	return _c
}

// RegisterSum provides a mock function with given fields:
func (_m *MockICommand) RegisterSum() {
	_m.Called()
}

// MockICommand_RegisterSum_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RegisterSum'
type MockICommand_RegisterSum_Call struct {
	*mock.Call
}

// RegisterSum is a helper method to define mock.On call
func (_e *MockICommand_Expecter) RegisterSum() *MockICommand_RegisterSum_Call {
	return &MockICommand_RegisterSum_Call{Call: _e.mock.On("RegisterSum")}
}

func (_c *MockICommand_RegisterSum_Call) Run(run func()) *MockICommand_RegisterSum_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockICommand_RegisterSum_Call) Return() *MockICommand_RegisterSum_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockICommand_RegisterSum_Call) RunAndReturn(run func()) *MockICommand_RegisterSum_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockICommand creates a new instance of MockICommand. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockICommand(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockICommand {
	mock := &MockICommand{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
